name: CI/CD Pipeline (Local)

on:
  push:
    branches: 
      - main
    paths-ignore:
      - 'k8s/prometheus.yaml'
      - 'k8s/grafana.yaml'

  workflow_dispatch:

jobs:
  app-deploy:
    name: Build, Test & Deploy App
    runs-on: self-hosted

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Set image tag based on commit
        id: vars
        run: |
          IMAGE_TAG=hello-service:$(git rev-parse --short HEAD)
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV

      - name: Use Minikube Docker
        run: |
          eval $(minikube docker-env)
      
      - name: Preload base Python image
        run: |
          docker pull python:3.11-slim

      - name: Build Docker image inside Minikube
        run: |
          docker build -t $IMAGE_TAG --label ci_cd_pipeline=true .

      - name: Run tests
        run: |
          docker run --rm $IMAGE_TAG pytest tests/

      - name: Cleanup old Docker images
        run: |
          docker images hello-service --filter "label=ci_cd_pipeline=true" --format "{{.ID}}" | \
          tail -n +2 | xargs -r docker rmi -f || true


      - name: Deploy application to Kubernetes
        run: |
          kubectl apply -f k8s/deployment.yaml
          kubectl apply -f k8s/service.yaml
          kubectl set image deployment/hello-service hello-service=$IMAGE_TAG
          kubectl rollout status deployment hello-service --timeout=300s

      - name: Check pods
        run: |
          kubectl get pods -o wide

  monitoring-deploy:
    name: Deploy Monitoring Stack
    runs-on: self-hosted
    needs: app-deploy
    if: |
      github.event_name == 'workflow_dispatch' ||
      contains(github.event.head_commit.message, '[monitoring]')

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Deploy Prometheus and Grafana
        run: |
          echo "Applying Prometheus and Grafana manifests..."
          kubectl apply -f k8s/prometheus.yaml
          kubectl apply -f k8s/grafana.yaml
          kubectl rollout status deployment prometheus --timeout=60s || true
          kubectl rollout status deployment grafana --timeout=60s || true
          echo "Monitoring stack deployed."
      
      - name: Show access URLs
        run: |
          echo "Hello Service:  http://localhost:30000"
          echo "Grafana:        http://localhost:30000"
          echo "Prometheus:     http://localhost:30000"
